<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "Http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	
	
	<!-- 라운지 게시글 개수 조회용 -->
	<!-- 전체 게시글 조회면 type값 null임 -->
	<!-- 직업 탭만 누르면(직업 전체) type값 lounge_job임 -->
	<select id="listCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN USER_INFO U ON(B.USERNAME = U.USERNAME)
		<choose>
			<when test="typeName == null || typeName ==''">
				WHERE B.TYPECLASS IN (1,2,3)
			</when>
			<when test="typeName == '직업'">
				WHERE B.TYPECLASS IN (3)
			</when>
			<otherwise>
				WHERE B.TYPENAME = #{typeName}
			</otherwise>
		</choose>
		<if test="condition != null and condition != ''">
			<choose>
				<when test="condition == 'title'">
					AND LOWER(B.TITLE) LIKE '%'||LOWER(#{keyword})||'%'
				</when>
				<when test="condition == 'writer'">
					AND LOWER(U.NICKNAME) LIKE '%'||LOWER(#{keyword})||'%'				
				</when>
				<otherwise>
					AND LOWER(B.DETAIL) LIKE '%'||LOWER(#{keyword})||'%'
				</otherwise>
			</choose>
		</if>
		AND B.STATUS = 'Y'
	</select>
	
	
	
	<resultMap type="Board" id="boardListMap">
		<result property="boardNo" column="BOARDNO"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="title" column="TITLE"/>
		<result property="createDate" column="CREATEDATE"/>
		<result property="viewCount" column="VIEWCOUNT"/>
		<result property="displayName" column="DISPLAYNAME"/>
		<result property="rankPoint" column="RANKPOINT"/>
		<result property="likeCount" column="LIKECOUNT"/>
		
		<result property="changeName" column="CHANGENAME"/>
		
		<result property="replyCount" column="REPLY_COUNT"/>
		<result property="hasFile" column="HAS_FILE"/>
	</resultMap>
	
	<!-- 라운지 게시글 목록 조회용 -->
	<select id="boardList" resultMap="boardListMap">
		SELECT 
		    B.BOARDNO,
		    B.TITLE,
		    B.CREATEDATE,
		    B.VIEWCOUNT,
		    B.LIKECOUNT,
		    B.TYPENAME,
		    B.TYPECLASS,
		    
		    U.RANKPOINT,
		    U.NICKNAME,
		    
		    F.CHANGENAME,
		
		    NVL(R.REPLY_COUNT, 0) AS REPLY_COUNT,
		    CASE WHEN F.FILE_EXISTS > 0 THEN 'Y' ELSE 'N' END AS HAS_FILE
		
		FROM BOARD B
		
		JOIN USER_INFO U ON B.USERNAME = U.USERNAME
		
		LEFT JOIN (
		    SELECT BOARDNO, COUNT(*) AS REPLY_COUNT
		    FROM REPLY
		    WHERE STATUS = 'Y'
		    GROUP BY BOARDNO
		  ) R ON B.BOARDNO = R.BOARDNO
		
		LEFT JOIN (
		    SELECT BOARDNO,CHANGENAME,COUNT(*) AS FILE_EXISTS
		    FROM BOARD_FILE
		    WHERE STATUS = 'Y'
		    AND FILELEVEL = 1
		    GROUP BY BOARDNO,CHANGENAME
		  ) F ON B.BOARDNO = F.BOARDNO
		
		WHERE B.STATUS = 'Y'
		<choose>
			<when test="typeName == null || typeName ==''">
				AND B.TYPECLASS IN (1,2,3)
			</when>
			<when test="typeName == '직업'">
				AND B.TYPECLASS IN (3)
			</when>
			<otherwise>
				AND B.TYPENAME = #{typeName}
			</otherwise>
		</choose>
		<if test="condition != null and condition != ''">
			<choose>
				<when test="condition == 'title'">
					AND LOWER(B.TITLE) LIKE '%'||LOWER(#{keyword})||'%'
				</when>
				<when test="condition == 'writer'">
					AND LOWER(U.NICKNAME) LIKE '%'||LOWER(#{keyword})||'%'				
				</when>
				<otherwise>
					AND LOWER(B.DETAIL) LIKE '%'||LOWER(#{keyword})||'%'
				</otherwise>
			</choose>
		</if>
		
		ORDER BY B.CREATEDATE DESC
	</select>
	
	
	
	<!-- 라운지 상위top5 게시글 목록 조회용 -->
	<select id="topLikedList" resultMap="boardListMap">
		SELECT *
		FROM (
		  SELECT 
		    B.BOARDNO,
		    B.TITLE,
		    B.CREATEDATE,
		    B.VIEWCOUNT,
		    B.LIKECOUNT,
		    B.TYPENAME,
		    B.TYPECLASS,
		    
		    U.RANKPOINT,
		    U.NICKNAME,
		    
		    F.CHANGENAME,
		
		    NVL(R.REPLY_COUNT, 0) AS REPLY_COUNT,
		    CASE WHEN F.FILE_EXISTS > 0 THEN 'Y' ELSE 'N' END AS HAS_FILE
		
		  FROM BOARD B
		
		  JOIN USER_INFO U ON B.USERNAME = U.USERNAME
		
		
		  LEFT JOIN (
		    SELECT BOARDNO, COUNT(*) AS REPLY_COUNT
		    FROM REPLY
		    WHERE STATUS = 'Y'
		    GROUP BY BOARDNO
		  ) R ON B.BOARDNO = R.BOARDNO
		
		  LEFT JOIN (
		    SELECT BOARDNO, CHANGENAME, COUNT(*) AS FILE_EXISTS
		    FROM BOARD_FILE
		    WHERE STATUS = 'Y'
		    AND FILELEVEL = 1
		    GROUP BY BOARDNO, CHANGENAME
		  ) F ON B.BOARDNO = F.BOARDNO
		
		  WHERE B.STATUS = 'Y'
		  <choose>
			<when test="typeName == null || typeName ==''">
				AND B.TYPECLASS IN (1,2,3)
			</when>
			<when test="typeName == '직업'">
				AND B.TYPECLASS IN (3)
			</when>
			<otherwise>
				AND B.TYPENAME = #{typeName}
			</otherwise>
		</choose>
		<if test="condition != null and condition != ''">
			<choose>
				<when test="condition == 'title'">
					AND LOWER(B.TITLE) LIKE '%'||LOWER(#{keyword})||'%'
				</when>
				<when test="condition == 'writer'">
					AND LOWER(U.NICKNAME) LIKE '%'||LOWER(#{keyword})||'%'				
				</when>
				<otherwise>
					AND LOWER(B.DETAIL) LIKE '%'||LOWER(#{keyword})||'%'
				</otherwise>
			</choose>
		</if>
		
		  ORDER BY B.LIKECOUNT DESC, B.CREATEDATE DESC
		
		) 
		WHERE <![CDATA[ROWNUM <= 5]]>
	</select>
	
	<update id="increaseCount">
		UPDATE BOARD
		SET VIEWCOUNT = VIEWCOUNT + 1
		WHERE BOARDNO = #{BOARDNO}
	</update>
	
	
	
	<resultMap type="Board" id="boardDetailResultMap">
		<result property="boardNo" column="BOARDNO"/>
		<result property="userName" column="USERNAME"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="typeName" column="typeName"/>
		<result property="title" column="TITLE"/>
		<result property="detail" column="DETAIL"/>
		<result property="status" column="STATUS"/>
		<result property="createDate" column="CREATEDATE"/>
		<result property="viewCount" column="VIEWCOUNT"/>
		<result property="displayName" column="DISPLAYNAME"/>
		<result property="rankPoint" column="RANKPOINT"/>
		<result property="likeCount" column="LIKECOUNT"/>
		<result property="dislikeCount" column="DISLIKECOUNT"/>
		<collection property="fileList" ofType="BoardFile">
			<result property="fileNo" column="BOARD_FILENO"/>
			<result property="boardNo" column="BOARDNO"/>
			<result property="type" column="TYPE"/>
			<result property="originName" column="ORIGINNAME"/>
			<result property="changeName" column="CHANGENAME"/>
			<result property="uploadDate" column="UPLOADDATE"/>
			<result property="status" column="BOARD_FILE_STATUS"/>
		</collection>
		<collection property="replyList" ofType="Reply">
			<result property="replyNo" column="REPLYNO"/>
			<result property="fileNo" column="REPLY_FILENO"/>
			<result property="changeName" column="REPLY_CHANGENAME"/>
		</collection>
	</resultMap>
	
	
	<select id="loungeBoardDetail" resultMap="boardDetailResultMap">
		SELECT B.BOARDNO
			  ,B.USERNAME
		      ,U.NICKNAME
		      ,B.DETAIL
		      ,B.TITLE
		      ,B.CREATEDATE
		      ,B.VIEWCOUNT
		      ,B.LIKECOUNT
		      ,B.DISLIKECOUNT
		      ,B.STATUS BOARD_STATUS
		      ,B.TYPENAME
		      ,U.RANKPOINT
		      ,F.FILENO AS BOARD_FILENO
		      ,F.ORIGINNAME
		      ,F.CHANGENAME
		      ,F.STATUS AS BOARD_FILE_STATUS
		      ,R.REPLYNO
              ,R.FILENO AS REPLY_FILENO
              ,FR.CHANGENAME AS REPLY_CHANGENAME
		FROM BOARD B
		JOIN USER_INFO U ON(B.USERNAME = U.USERNAME)
		LEFT JOIN (SELECT FILENO,BOARDNO,STATUS,CHANGENAME,ORIGINNAME,FILELEVEL
                   FROM BOARD_FILE
                   WHERE STATUS = 'Y') F ON(B.BOARDNO = F.BOARDNO)
		LEFT JOIN (SELECT REPLYNO,BOARDNO,FILENO,STATUS
                   FROM REPLY
                   WHERE STATUS = 'Y') R ON(R.BOARDNO = B.BOARDNO)
		LEFT JOIN BOARD_FILE FR ON(R.FILENO = FR.FILENO)
		WHERE B.BOARDNO = #{boardNo}
		ORDER BY F.FILELEVEL
	</select>
	
	<select id="getBoardNo" resultType="_int">
		SELECT SEQ_BNO.NEXTVAL
		FROM DUAL
	</select>
	
	<insert id="writeLoungeBoard"> <!-- 라운지 게시글 등록 -->
		INSERT INTO BOARD(BOARDNO
						 ,USERNAME
						 ,TYPENAME
						 ,TYPECLASS
						 ,TITLE
						 ,DETAIL
						 )
					     VALUES(#{boardNo}
				   			   ,#{userName}
					   		   ,#{typeName}
					   		   ,#{typeClass}
					   		   ,#{title}
					   		   ,#{detail}
					   		    )
	</insert>
	
	<insert id="insertFile">
		INSERT INTO BOARD_FILE(FILENO
							  ,BOARDNO
							  ,TYPE
							  ,ORIGINNAME
							  ,CHANGENAME
							  ,FILELEVEL)
					VALUES(SEQ_FNO.NEXTVAL
						   ,#{boardNo}
						   ,#{type}
						   ,#{originName}
						   ,#{changeName}
						   ,#{fileLevel})
							  
	</insert>
	
	<select id="getFileNo" resultType="_int">
		SELECT SEQ_FNO.NEXTVAL
		FROM DUAL
	</select>
	
	<update id="deleteLoungeBoard">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARDNO = #{boardNo}
	</update>
	
	<update id="deleteFileOfBoard">
		UPDATE BOARD_FILE
		SET STATUS = 'N'
		WHERE FILENO = #{fileNo}
	</update>
	
	<update id="updateLoungeBoard">
		UPDATE BOARD
		SET TITLE = #{title}
		   ,DETAIL = #{detail}
		   ,TYPENAME = #{typeName}
		   ,TYPECLASS = #{typeClass}
		WHERE BOARDNO = #{boardNo}
	</update>
	
	<insert id="uploadFileOfReply">
		INSERT INTO BOARD_FILE(FILENO
							  ,TYPE
							  ,ORIGINNAME
							  ,CHANGENAME)
					VALUES(#{fileNo}
						   ,#{type}
						   ,#{originName}
						   ,#{changeName})
	</insert>
	
	<insert id="uploadReply">
		INSERT INTO REPLY(REPLYNO
						 ,BOARDNO
						 ,FILENO
						 ,REPLYCONTENT
						 ,USERNAME)
					VALUES(SEQ_REPLYNO.NEXTVAL
						  ,#{boardNo}
						  <choose>
						  	<when test="fileNo == 0">
						  	,null
						  	</when>
						  	<otherwise>
						  	,#{fileNo}
						  	</otherwise>
						  </choose>
						  ,#{replyContent}
						  ,#{userName})						 				
	</insert>
	
	<select id="getReplyList" resultType="Reply">
		SELECT R.REPLYNO
			  ,R.REPLYCONTENT
			  ,R.CREATEDATE
			  ,R.USERNAME
			  ,R.LIKECOUNT
			  ,F.FILENO
			  ,F.CHANGENAME
			  ,F.ORIGINNAME
			  ,U.NICKNAME
			  ,U.RANKPOINT
		FROM REPLY R
		JOIN BOARD B ON (R.BOARDNO = B.BOARDNO)
		LEFT JOIN BOARD_FILE F ON (R.FILENO = F.FILENO)
		JOIN USER_INFO U ON (R.USERNAME = U.USERNAME)
		WHERE B.BOARDNO = #{boardNo}
		AND R.STATUS ='Y'
		ORDER BY R.CREATEDATE
	</select>
	
	<select id="selectReply" resultType="Reply">
		SELECT *
		FROM REPLY
		LEFT JOIN BOARD_FILE USING(FILENO)
		WHERE REPLYNO = #{replyNo}
	</select>
	
	<update id="deleteReply">
		UPDATE REPLY
		SET STATUS = 'N'
		WHERE REPLYNO = #{replyNo}
	</update>
	
	<update id="deleteFileOfReply">
		UPDATE BOARD_FILE
		SET STATUS = 'N'
		WHERE FILENO = #{fileNo}	
	</update>
	
	<select id="checkBoardLike" resultType="string">
		SELECT TYPE
		FROM BOARD_LIKE
		WHERE USERNAME = #{userName}
		AND BOARDNO = #{boardNo}
	</select>
	
	<delete id="deleteBoardLikeHistory">
		DELETE
		FROM BOARD_LIKE
		WHERE USERNAME = #{userName}
		AND BOARDNO = #{boardNo}
		AND TYPE = #{type}
	</delete>
	
	<update id="increaseBoardLike">
		UPDATE BOARD
		SET 
			LIKECOUNT = LIKECOUNT + CASE WHEN #{type} = 'L' THEN 1 ELSE 0 END,
			DISLIKECOUNT = DISLIKECOUNT + CASE WHEN #{type} = 'L' THEN 0 ELSE 1 END
		WHERE BOARDNO = #{boardNo}
	</update>
	
	<update id="decreaseBoardLike">
		UPDATE BOARD
		SET 
			LIKECOUNT = LIKECOUNT - CASE WHEN #{type} = 'L' THEN 1 ELSE 0 END,
			DISLIKECOUNT = DISLIKECOUNT - CASE WHEN #{type} = 'L' THEN 0 ELSE 1 END
		WHERE BOARDNO = #{boardNo}
	</update>
	
	<insert id="insertBoardLikeHistory">
		INSERT INTO BOARD_LIKE(LIKENO
							  ,BOARDNO
							  ,USERNAME
							  ,TYPE)
			   VALUES(SEQ_B_LIKENO.NEXTVAL
			   	     ,#{boardNo}
			   	     ,#{userName}
			   	     ,#{type}
			   	     ) 
	</insert>
	
	<select id="checkReplyLike" resultType="_int">
		SELECT COUNT(*)
		FROM REPLY_LIKE
		WHERE REPLYNO = #{replyNo}
		AND USERNAME = #{userName}
	</select>
	
	<delete id="deleteReplyLikeHistory">
		DELETE
		FROM REPLY_LIKE
		WHERE REPLYNO = #{replyNo}
		AND USERNAME = #{userName}
	</delete>
	
	<update id="decreaseReplyLike">
		UPDATE REPLY
		SET 
			LIKECOUNT = LIKECOUNT - 1
		WHERE REPLYNO = #{replyNo}
	</update>
	
	<insert id="insertReplyLikeHistory">
		INSERT INTO REPLY_LIKE(LIKENO
							  ,REPLYNO
							  ,USERNAME)
				   VALUES(SEQ_R_LIKENO.NEXTVAL
				   		 ,#{replyNo}
				   		 ,#{userName}
				   		 )
	</insert>
	
	<update id="increaseReplyLike">
		UPDATE REPLY
		SET 
			LIKECOUNT = LIKECOUNT + 1
		WHERE REPLYNO = #{replyNo}
	</update>
	
	<resultMap type="BoardFile" id="BoardFileResultMap">
		<result property="boardNo" column="BOARDNO"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="title" column="TITLE"/>
		<result property="createDate" column="CREATEDATE"/>
		<result property="viewCount" column="VIEWCOUNT"/>
		<result property="likeCount" column="LIKECOUNT"/>
		
		<result property="replyCount" column="REPLY_COUNT"/>
	</resultMap>
	
	<select id="videoList" resultMap="BoardFileResultMap">
		SELECT B.TITLE
			  ,U.NICKNAME
			  ,B.CREATEDATE
			  ,B.VIEWCOUNT
			  ,F.CHANGENAME
			  ,F.BOARDNO
			  ,NVL(A.REPLY_COUNT,0) REPLY_COUNT
              ,B.LIKECOUNT
		FROM BOARD_FILE F
		JOIN BOARD B ON (F.BOARDNO = B.BOARDNO)
		JOIN USER_INFO U ON (B.USERNAME = U.USERNAME)
		LEFT JOIN (
					SELECT B.BOARDNO 
						  ,COUNT(*) REPLY_COUNT
					FROM BOARD B
					JOIN REPLY R ON (B.BOARDNO=R.BOARDNO)
					WHERE R.STATUS = 'Y'
                    GROUP BY B.BOARDNO
				  ) A ON (B.BOARDNO = A.BOARDNO)		
		WHERE F.TYPE = 'video'
        AND B.STATUS = 'Y'
	</select>
	
	<select id="videoDetail" resultMap="BoardFileResultMap">
		SELECT B.TITLE
			  ,B.DETAIL
			  ,B.USERNAME
			  ,U.NICKNAME
			  ,U.RANKPOINT
			  ,B.CREATEDATE
			  ,B.VIEWCOUNT
			  ,F.CHANGENAME
			  ,F.BOARDNO
              ,B.LIKECOUNT
              ,B.DISLIKECOUNT
		FROM BOARD_FILE F
		JOIN BOARD B ON (F.BOARDNO = B.BOARDNO)
		JOIN USER_INFO U ON (B.USERNAME = U.USERNAME)
		WHERE F.TYPE = 'video'
		AND B.BOARDNO = #{boardNo}
        AND B.STATUS = 'Y'
        AND F.STATUS = 'Y'
	</select>

	<select id="getFileNoWithBoardNo" resultType="_int">
		SELECT FILENO
		FROM BOARD_FILE
		WHERE BOARDNO=#{boardNo}
		AND STATUS = 'Y'
	</select>
	
	<update id="updateFileLevel">
		UPDATE BOARD_FILE
		SET FILELEVEL = #{fileLevel}
		WHERE FILENO = #{fileNo}
	</update>
	
	<update id="deleteBoardFile">
		UPDATE BOARD_FILE
		SET STATUS = 'N'
		WHERE FILENO = #{fileNo}
	</update>
	
	
	<select id="selectFileName" resultType="string">
		SELECT CHANGENAME
		FROM BOARD_FILE
		WHERE FILENO = #{deletedId}
	</select>
	
	
	
	
	
	
	
	
	
</mapper>