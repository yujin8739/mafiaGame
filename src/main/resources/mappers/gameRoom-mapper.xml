<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "Http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gameRoomMapper">

	<insert id="insertRoom" parameterType="GameRoom">
	    <selectKey keyProperty="roomNo" resultType="int" order="BEFORE">
	        SELECT SEQ_RNO.NEXTVAL FROM DUAL
	    </selectKey>
	
	    INSERT INTO GAME_ROOM (
	        ROOMNO,
	        ROOMNAME,
	        USERLIST,
	        HEADCOUNT,
	        PASSWORD,
	        TYPE,
	        COUNT
	    ) VALUES (
	        #{roomNo},
	        #{roomName},
	        #{userList},
	        #{headCount},
	        #{password},
	        #{type},
	        #{count}
	    )
	</insert>
    
	<delete id="deleteRoom" parameterType="_int">
	    DELETE FROM GAME_ROOM
	    WHERE ROOMNO = #{roomNo}
	</delete>
	
	<update id="updateUserList">
	    UPDATE GAME_ROOM
	    SET USERLIST = #{userList}
	    WHERE ROOMNO = #{roomNo}
	</update>
	
	<update id="updateRoomMaster">
		UPDATE GAME_ROOM
	    SET MASTER = #{userName}
	    WHERE ROOMNO = #{roomNo}
	</update>
	
	<select id="selectRoom" resultType="GameRoom" parameterType="_int">
	    SELECT *
	    FROM GAME_ROOM
	    WHERE ROOMNO = #{roomNo}
	</select>
	
	<select id="selectAllRooms" resultType="GameRoom">
	    SELECT ROOMNO, ROOMNAME, USERLIST, HEADCOUNT, PASSWORD, TYPE
	    FROM GAME_ROOM
	    ORDER BY ROOMNO
	</select>
	
	<update id="updateReadyList">
	    UPDATE GAME_ROOM
	    SET READYUSER = #{userList}
	    WHERE ROOMNO = #{roomNo}
	</update>
	
	<update id="updateStart">
	    UPDATE GAME_ROOM
	    SET READYUSER = '[]',
	    	ISGAMING = 'Y',
	    	JOB = #{updatedJob}
	    WHERE ROOMNO = #{roomNo}
	</update>
	
	<select id="getReadyCount" resultType="string">
		SELECT READYUSER
		FROM GAME_ROOM	
		WHERE ROOMNO = #{roomNo}
	</select>
	
	<!-- 게임시작 시 직업 선택 -->
	<select id="selectRandomJobs" parameterType="hashmap" resultType="Job">
        SELECT
            JOBNO, JOBNAME, JOBCLASS, OPTIONAL,
            MATCHCODE, PROBABILITY, JOBVISIBLE
        FROM TABLE(F_GET_RANDOM_JOBS(
            p_mafia_count   => #{mafiaCount},
            p_citizen_count => #{citizenCount},
            p_neutral_count => #{neutralCount}
        ))
    </select>
    
    <select id="getRoomJob" resultType="map" parameterType="int">
	    SELECT USERLIST, JOB
	    FROM GAME_ROOM
	    WHERE ROOMNO = #{roomNo}
	</select>
	
	<select id="getJobDetail" resultType="Job">
		SELECT JOBNO, JOBNAME, JOBCLASS, OPTIONAL, MATCHCODE, PROBABILITY, JOBVISIBLE
		FROM JOB
		WHERE JOBNO = #{myJob}
	</select>
	
	<select id="getDeathList" resultType="string" parameterType="int">
	   SELECT 
	     CASE
	       WHEN job_number = 0 THEN 'death'
	       ELSE 'alive'
	     END AS status
	   FROM (
	     SELECT 
	       TO_NUMBER(REGEXP_REPLACE(REGEXP_SUBSTR(JOB, '[^,]+', 1, LEVEL), '[^0-9]', '')) AS job_number
	     FROM GAME_ROOM
	     WHERE ROOMNO = #{roomNo}
	     CONNECT BY LEVEL &lt;= REGEXP_COUNT(JOB, ',') + 1
	       AND PRIOR ROOMNO = ROOMNO
	       AND PRIOR DBMS_RANDOM.VALUE IS NOT NULL
	   )
	</select>
	
	<select id="selectKill" resultType="Kill">
		SELECT ROOMNO, DAYNO, VOTE, HEALUSER, KILLUSER
		FROM KILL WHERE ROOMNO = #{roomNo} AND DAYNO = #{dayNo}
	</select>
	
	<update id="updateKill" parameterType="Kill">
		UPDATE KILL 
		SET VOTE = #{vote},
			KILLUSER = #{killUser},
			HEALUSER = #{healUser}
		WHERE ROOMNO = #{roomNo} AND DAYNO = #{dayNo}
	</update>
	
	<update id="updateDayNo">
	    UPDATE GAME_ROOM
	    SET DAYNO = #{dayNo}
	    WHERE ROOMNO = #{roomNo}
	</update>
	
	<insert id="insertKill" parameterType="Kill">
		INSERT INTO KILL 
		(ROOMNO,
		DAYNO,
		VOTE,
		HEALUSER,
		KILLUSER)
		VALUES (
		#{roomNo},
		#{dayNo},
		#{vote},
		#{healUser},
		#{killUser})
	</insert>
	
	<update id="updateJob">
	 	UPDATE GAME_ROOM
	    SET JOB = #{job}
	    WHERE ROOMNO = #{roomNo}
	</update>
</mapper>